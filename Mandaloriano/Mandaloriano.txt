Entidades: 
	clsMision: clase que utilizaremos para guardar los datos de cada mision.
	->int id, string titulo, string descripcion, int creditos

DAL:(capa de acceso a los datos//capa servicios-> se conecta a una API o una BBDD):

	clsListadoMisionesDAL: clase que devuelve un List de tipo clsMision
	->List<clsMision>listadoMisiones()	


CAPA BL: (Bussiness Logic, filtra o revisa los datos que vienen de la DAL y la presenta a la UI)
	En este caso, es lo mismo que la DAL.


UI:
	Models:
		ViewModel: 
			clsListadoMisionesVM: 
			->List<clsMision>ListadoMisiones; clsMision MisionActual
						
	Controllers:

		Home:
			action Index(): 
				List<clsMision>listadoMisiones=clsListadoMisionesDAL.listadoMisiones()
 				clsMision mision= new clsMision()
				clsListadoMisionesVM vistaVM= new clsListadoMisionesVM(listadoMisiones, mision) 
				return View(vistaVM)

			[HTTP Post]
			action Index(int idMision):
				List<clsMision> listadoMisiones = clsListadoMisionesDAL.listadoMisiones()
				clsMision misionVM = new clsMision()
				foreach (clsMision mision in listadoMisiones){
    					if (mision.Id == idMision){
        					misionVM.Id = mision.Id
       						misionVM.Titulo = mision.Titulo
        					misionVM.Descripcion = mision.Descripcion
        					misionVM.Creditos = mision.Creditos}}
				clsListadoMisionesVM vistaVM = new clsListadoMisionesVM(listadoMisiones, misionVM)
				return View(vistaVM)

	Views: 
		@model MandalorianoB.Models.ViewModel.clsListadoMisionesVM
		